@using PagedList.Mvc;
@model Tuple<PagedList.IPagedList<MovieStore.Models.Movie>, IEnumerable<MovieStore.Models.Movie>>


    @{
        ViewBag.Title = "Search Results";
        var searchResults = Model.Item1;
        var recomendedMovies = Model.Item2 as IEnumerable<MovieStore.Models.Movie>;
    }
    <br />
    <br />
    @using (Html.BeginForm("Index", "Search", FormMethod.Get))
    {
        <fieldset>

            <p>
                Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
                Genre: @Html.DropDownList("movieGenre", "All")
                <input type="submit" value="Search" />
            </p>

        </fieldset>

    }
<div>
    <label>Search Results</label>
    <br />
   <br />

</div>


    <table class="table">
        <tr>
            <th style="width:228px;">
                @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th style="width:239px;">
                @Html.ActionLink("Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th style="width:260px;">
                @Html.ActionLink("Price", "Index", new { sortOrder = ViewBag.PriceSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                Genres
            </th>
            <th></th>
        </tr>
        @foreach (var item in searchResults)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @foreach (var genre in item.MovieGenres)
                    {
                        @Html.DisplayFor(modelItem => genre.Genre.TItle);
                        <br />
                    }
                </td>

            </tr>
        }
    </table>
<label>Most 5 popular Movies We recommend for you</label>
<table class="table">
    <tr>
        <th style="width:228px;">
            @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th style="width:239px;">
            @Html.ActionLink("Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th style="width:260px;">
            @Html.ActionLink("Price", "Index", new { sortOrder = ViewBag.PriceSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Genres
        </th>
        <th></th>
    </tr>
    @foreach (var item in recomendedMovies)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @foreach (var genre in item.MovieGenres)
                {
                    @Html.DisplayFor(modelItem => genre.Genre.TItle);
                    <br />
                }
            </td>

        </tr>
    }
</table>

    <br />
    Page @(searchResults.PageCount < searchResults.PageNumber ? 0 : searchResults.PageNumber) of @searchResults.PageCount

    @Html.PagedListPager(searchResults, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
